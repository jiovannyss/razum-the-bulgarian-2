// –¢–µ—Å—Ç –Ω–∞ Football-Data.org API –∑–∞ –ë—Ä–∞–∑–∏–ª—Å–∫–∏ —à–∞–º–ø–∏–æ–Ω–∞—Ç
const corsProxy = 'https://corsproxy.io/?';
const baseUrl = 'https://api.football-data.org/v4';
const apiKey = '4c0b967130864749a36fb552c0755910';

async function testBrazilianLeague() {
    try {
        console.log('üîç Testing Football-Data.org API...');
        
        // –ü—ä—Ä–≤–æ –ø–æ–ª—É—á–∞–≤–∞–º–µ –≤—Å–∏—á–∫–∏ —Å—ä—Å—Ç–µ–∑–∞–Ω–∏—è
        const competitionsUrl = `${corsProxy}${encodeURIComponent(baseUrl + '/competitions')}`;
        const competitionsResponse = await fetch(competitionsUrl, {
            headers: {
                'X-Auth-Token': apiKey,
                'Content-Type': 'application/json',
            },
        });
        
        if (!competitionsResponse.ok) {
            throw new Error(`Competitions API failed: ${competitionsResponse.status}`);
        }
        
        const competitionsData = await competitionsResponse.json();
        console.log('üèÜ Available competitions:', competitionsData.competitions.map(c => ({
            id: c.id,
            name: c.name,
            code: c.code,
            plan: c.plan
        })));
        
        // –ù–∞–º–∏—Ä–∞–º–µ –±—Ä–∞–∑–∏–ª—Å–∫–∏—è —à–∞–º–ø–∏–æ–Ω–∞—Ç
        const brasileirao = competitionsData.competitions.find(c => 
            c.name.includes('Brasileiro') || c.code === 'BSA'
        );
        
        if (!brasileirao) {
            console.log('‚ùå –ë—Ä–∞–∑–∏–ª—Å–∫–∏ —à–∞–º–ø–∏–æ–Ω–∞—Ç –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω');
            return;
        }
        
        console.log('üáßüá∑ –ù–∞–º–µ—Ä–µ–Ω –±—Ä–∞–∑–∏–ª—Å–∫–∏ —à–∞–º–ø–∏–æ–Ω–∞—Ç:', brasileirao);
        
        // –ü–æ–ª—É—á–∞–≤–∞–º–µ –º–∞—á–æ–≤–µ—Ç–µ –∑–∞ 21-–≤–∏ –∫—Ä—ä–≥
        const matchesUrl = `${corsProxy}${encodeURIComponent(baseUrl + `/competitions/${brasileirao.id}/matches?matchday=21`)}`;
        const matchesResponse = await fetch(matchesUrl, {
            headers: {
                'X-Auth-Token': apiKey,
                'Content-Type': 'application/json',
            },
        });
        
        if (!matchesResponse.ok) {
            throw new Error(`Matches API failed: ${matchesResponse.status}`);
        }
        
        const matchesData = await matchesResponse.json();
        console.log('‚öΩ –ú–∞—á–æ–≤–µ –æ—Ç 21-–≤–∏ –∫—Ä—ä–≥:', matchesData.matches.map(m => ({
            id: m.id,
            homeTeam: m.homeTeam.name,
            awayTeam: m.awayTeam.name,
            utcDate: m.utcDate,
            matchday: m.matchday,
            status: m.status
        })));
        
        return matchesData.matches;
        
    } catch (error) {
        console.error('‚ùå API –ì—Ä–µ—à–∫–∞:', error);
        throw error;
    }
}

// –ò–∑–ø—ä–ª–Ω—è–≤–∞–º–µ —Ç–µ—Å—Ç–∞
testBrazilianLeague();